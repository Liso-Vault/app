plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}


def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 34

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }


    defaultConfig {
        applicationId "com.liso.app"
        resValue "string", "app_name", "Liso"
        minSdkVersion 29 // biometrics requirement
        targetSdkVersion flutter.targetSdkVersion
        multiDexEnabled true // Firebase
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            ndk {
                debugSymbolLevel 'FULL'
            }
        }
    }

    // FLAVORS
    flavorDimensions "app"
    
    productFlavors {
        production {
            dimension "app"
        }

        development {
            dimension "app"
            applicationId "com.liso.app.debug"
            resValue "string", "app_name", "Liso Debug"
        }
    }
    
    lint {
        checkReleaseBuilds false
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    // // appodeal
    // implementation ('com.appodeal.ads:sdk:3.2.1.0') {
    //     exclude group: 'com.appodeal.ads.sdk.services', module: 'adjust'
    //     exclude group: 'com.appodeal.ads.sdk.services', module: 'appsflyer'
    //     exclude group: 'com.appodeal.ads.sdk.services', module: 'firebase'
    //     exclude group: 'com.appodeal.ads.sdk.services', module: 'facebook_analytics'
    // }
}
